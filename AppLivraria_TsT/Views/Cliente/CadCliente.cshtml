@model AppLivraria_TsT.Models.DTO.Cliente_DTO

@{
    ViewBag.Title = "Cadastro de Cliente";
}
@using (Html.BeginForm("CadCliente", "Cliente"))
{
    @Html.AntiForgeryToken()
    <section class="layout-content">
        <br />

        <nav class="navbar navbar-expand-md bg-light">
            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <i class="fas fa-caret-right"></i>
                        <span>Cadastrar Cliente</span>
                    </li>
                </ul>
            </div>
        </nav>
        <div class="container" id="cadastrarFunc">
            <form action="" method="POST">
                <div class="form-row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { placeholder = "Informe um nome", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { placeholder = "999.999.999-99", @class = "form-control", @id = "CPF" } })
                        @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"> </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { placeholder = "Informe o Sexo", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                </div>

                <div class="form-row">

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { placeholder = "(99)9999-9999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { placeholder = "(99)99999-9999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { placeholder = "99/99/9999", @class = "form-control", @id = "Nascimento" } })
                        @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>

                @*__________________________________________E-mail/Senha______________________________________________________*@
                <div class="form-row">

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "joao@gmail.com.br", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { placeholder = "********", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                @*__________________________________________INICIO ENDEREÇO LINHA 1___________________________________________*@
                <hr />
                <div class="form-row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { placeholder = "Informe o logradouro", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { placeholder = "Número", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.complemento, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { placeholder = "Exemplo casa, apto, loja", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.complemento, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { placeholder = "99999-999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>
                @*__________________________________________INICIO ENDEREÇO LINHA 2___________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { placeholder = "Informe o Bairro", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { placeholder = "Informe a cidade", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>


                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.estado, new { htmlAttributes = new { placeholder = "Informe o estado", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-1">
                        @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-1" })
                        @Html.EditorFor(model => model.UF, new { htmlAttributes = new { placeholder = "Informe o UF", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.TipoEndereco, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.TipoEndereco, new { htmlAttributes = new { placeholder = "Endereço cobrança/entrega", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoEndereco, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>
                @*__________________________________________FIM ENDEREÇO______________________________________________________*@

                @*<button type="button" class="btn btn-outline-primary" style="color:black">
                        @Html.ActionLink("Voltar", "ListarFuncionario", new { @style = "color:white" })
                    </button>*@
                <input type="hidden" id="id" name="id" value="" />
                <button type="submit" class="btn btn-outline-primary">Cadastrar</button>
            </form>
        </div>
    </section>
}
@ViewBag.msg
<script>
    $(document).ready(function () {
        $("#CPF").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
        $("#Telefone").inputmask("mask", { "mask": "(99)9999-9999" });
        $("#Celular").inputmask("mask", { "mask": "(99)99999-9999" });
        $("#CEP").inputmask("mask", { "mask": "99999-999" });
        $("#Nascimento").inputmask("mask", { "mask": "99/99/9999" });
    });
</script>

@Scripts.Render("~/bundles/inputmask")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


